---
- name: Debian/Ubuntu | Check for latest version
  uri: url="https://cdn.pterodactyl.io/releases/latest.json" return_content="yes"
  register: ptversion

- name: Debian/Ubuntu | Create Panel Folders
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0775
  with_items:
    - /var/www/pterodactyl

- name: Debian/Ubuntu | Download Panel Files
  get_url:
    url: "https://github.com/pterodactyl/panel/releases/download/v{{ ptversion.json.panel }}/panel.tar.gz"
    dest: /var/www/pterodactyl/panel.tar.gz

- name: Debian/Ubuntu | Extract Panel Files
  unarchive:
    src: /var/www/pterodactyl/panel.tar.gz
    dest: /var/www/pterodactyl
    remote_src: yes
    extra_opts:
      - --strip-components=1

- name: Debian/Ubuntu | Chmod Log Folder
  file:
    path: /var/www/pterodactyl/storage/
    mode: 0755
    recurse: yes

- name: Debian/Ubuntu | Chmod Cache Folder
  file:
    path: /var/www/pterodactyl/bootstrap/cache
    mode: 0755
    recurse: yes

- name: Debian/Ubuntu | Install Composer
  shell: curl -sSL https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer
  args:
    chdir: /var/www/pterodactyl
    creates: /usr/local/bin/composer
    warn: false

- name: Debian/Ubuntu | Copy .env File
  copy:
    src: /var/www/pterodactyl/.env.example
    dest: /var/www/pterodactyl/.env
    remote_src: yes

- name: Debian/Ubuntu | Install the Panel
  command: composer install --no-dev
  args:
    chdir: /var/www/pterodactyl

- name: Debian/Ubuntu | Generate the Panel Key
  command: php artisan key:generate --force -n
  args:
    chdir: /var/www/pterodactyl

#php artisan p:environment:setup
- name: Debian/Ubuntu | Artisan Setup
  command: php artisan p:environment:setup --author="{{ pt_email }}" --url=https://{{ domain_name }} --timezone="{{ pt_timezone }}" --cache="{{ pt_cache }}" --session="{{ pt_session }}" --queue="{{ pt_queue }}" --redis-host="{{ pt_redis_host }}" --redis-pass="{{ pt_redis_pass }}" --redis-port="{{ pt_redis_port }}" --env=production -n
  args:
    chdir: /var/www/pterodactyl
#php artisan p:environment:database
- name: Debian/Ubuntu | Artisan Database Setup
  command: php artisan p:environment:database --host="{{ pt_db_host }}" --port="{{ pt_db_port }}" --database=panel --username=pterodactyl --password="{{ ptdb_pass }}" -n
  args:
    chdir: /var/www/pterodactyl
#php artisan p:environment:mail
- name: Debian/Ubuntu | Artisan Mail Setup
  command: php artisan p:environment:mail --driver="{{ pt_mail_driver }}" --email="{{ pt_email }}" --from="{{ pt_email_from }}" --encryption="{{ pt_mail_encrypt }}" -n
  args:
    chdir: /var/www/pterodactyl

- name: Debian/Ubuntu | Artisan Migrate Database
  command: php artisan migrate --seed --force -n
  args:
    chdir: /var/www/pterodactyl

- name: Debian/Ubuntu | Generate Admin Account Password
  set_fact:
    pt_user_pass: "{{ lookup('password', '/dev/null chars=ascii_letters length=15') }}"

#php artisan p:user:make
- name: Debian/Ubuntu | Add Panel User
  command: php artisan p:user:make --email={{ pt_email }} --username={{ pt_user }} --name-first={{ pt_user_fname }} --name-last={{ pt_user_lname }} --password={{ pt_user_pass }} --admin=1 -n
  args:
    chdir: /var/www/pterodactyl

- name: Debian/Ubuntu | Chroot Pterodactyl Web Root
  file:
    path: /var/www/pterodactyl
    owner: www-data
    group: www-data
    recurse: yes

- name: Debian/Ubuntu | Create Cron Job
  cron:
    name: "Pterodactyl Queue Scheduler"
    job: "php /var/www/pterodactyl/artisan schedule:run >> /dev/null 2>&1"

- name: Debian/Ubuntu | Remove Default Nginx Config
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent

- name: Debian/Ubuntu | Add Pterodactyl Nginx Config
  template:
    src: templates/nginx.j2
    dest: /etc/nginx/sites-available/pterodactyl.conf

- name: Debian/Ubuntu | Enable Nginx Config
  file:
    src: /etc/nginx/sites-available/pterodactyl.conf
    dest: /etc/nginx/sites-enabled/pterodactyl.conf
    state: link

- name: Debian/Ubuntu | Reload Nginx
  service: name=nginx enabled=yes state=reloaded

- name: Debian/Ubuntu | Create the Queue Service
  template:
    src: templates/queue.j2
    dest: /etc/systemd/system/pteroq.service

- name: Debian/Ubuntu | Start the Queue Service
  service: name=pteroq enabled=yes state=started

- name: Debian/Ubuntu | Finished
  debug:
    msg:
      - "IMPORTANT DETAILS:"
      - "====================================================================="
      - "Pterodactyl Database Username/Password is pterodactyl / {{ ptdb_pass }}"
      - "MariaDB/MySQL Username/Password is root / {{ db_pass }}"
      - "Pterodactyl Panel Admin Username/Password is {{ pt_user }} / {{ pt_user_pass }}"
      - "====================================================================="
      - "Please run this command to change your email settings: php artisan p:environment:mail"
...